name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2022]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: 1.9
    - name: Install dependencies
      run: shards install

      # If this step breaks, try inspecting MSVC directory and consider changing appropriate paths.
      #
      #   ls 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\'
      #
      # Since windows runner can be updated the version can change in future releases.
    - name: Install SQLite3 + generate sqlite3.lib
      if: startsWith(runner.os, 'Windows')
      run: |
        choco install sqlite -y
        cd C:\ProgramData\chocolatey\lib\SQLite\tools
        ls 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\'
        & 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.36.32532\bin\Hostx64\x64\lib.exe' /DEF:sqlite3.def /OUT:sqlite3.lib /MACHINE:x64
        cp sqlite3.lib 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.36.32532\lib\x64'
    - name: Run tests
      run: crystal spec --verbose --order random --error-on-warnings

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: 1.9
    - name: Install dependencies
      run: shards install
    - name: Run linter
      run: bin/ameba

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: 1.9
    - run: make build
    - name: Install kcov
      run: |
        sudo apt-get update
        sudo apt-get install kcov
    - name: Generate coverage
      run: bin/crkcov --kcov-args --exclude-pattern=/usr/include,/usr/lib,lib/,spec/
    - name: Report coverage
      env:
        COVERALLS_REPO_TOKEN: ${{ github.token }}
      run: |
        cd coverage
        ../bin/coveralls report --measure --base-path src/coverage_reporter/
